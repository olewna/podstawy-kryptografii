Autor Oskar Lewna 278779

Program wywołujemy za pomocą polecenia: "python elgamal.py `flaga`" gdzie flaga to jeden z poniższych argumentów:

-k => czyta z powyższego pliku i generuje parę kluczy zapisanych w plikach private.txt oraz public.txt. Każdy klucz składa się z dwu wierszy skopiowanych z powyższego pliku oraz trzeciego wiersza zawierającego odpowiednio wykładnik lub potęgę.

-e => odczytuje klucz publiczny, następnie odczytuje wiadomość z pliku plain.txt i zapisuje zaszyfrowaną wiadomość w pliku crypto.txt. Jeśli warunek m<p nie jest spełniony, sygnalizuje błąd.

-d => odczytuje klucz prywatny i kryptogram, a odszyfrowaną wiadomość zapisuje w pliku decrypt.txt.

-s => odczytuje klucz prywatny, następnie odczytuje wiadomość z pliku message.txt i produkuje podpis, czyli dwa wiersze zapisane do pliku signature.txt.

-v => odczytuje klucz publiczny, wiadomość z pliku message.txt oraz podpis z pliku signature.txt i weryfikuje ten podpis. Wynik weryfikacji (T/N) jest wyświetlany na ekranie oraz jest zapisywany w pliku verify.txt.